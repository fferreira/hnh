
-- function to compare strings

slq (x:xs) (y:ys) = if (x `ceq` y) then 
    	   	       if (nil xs) then True else
		       	  (if (nil ys) then False else (slq xs ys))
		    else 
		       (if (x `clt` y) then True else False);

{-

makeQsort: function to create specialized sorting functions
cmp is the function that compares and has to have type:
    a -> a -> Bool
-}

makeQsort cmp =
let 
{
  ncmp a b = not (cmp a b);
  qsort []     = [];
  qsort (x:xs) = (qsort (filter (cmp x) xs)) ++ [x] ++ (qsort (filter (ncmp x) xs));
  
} in qsort;


-- qsorti to sort ints
qsorti = makeQsort (<);

-- qsortf to sort floats
qsortf = makeQsort (<.);

-- qsorts to sort strings
qsorts = makeQsort slq;

intList = [1,3,2,1,9,8,7,~6,5,4,3,4,5,6,7,8,9,10,0];
floatList = [1.2, 0.1, ~.3.4, 6.0];
stringList = ["az", "aa", "a", "am", "aaax", "a"];

main = (qsorti intList, qsortf floatList, qsorts stringList);